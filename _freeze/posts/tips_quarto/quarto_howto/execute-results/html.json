{
  "hash": "dc8aa1f813520c3d4741967d3e97979a",
  "result": {
    "markdown": "---\ntitle: Quarto how-to\ndate: '2022-07-29'\ncategories:\n  - cheatsheet\nexecute:\n  enabled: true\n---\n\n## Making custom listings \n\n[src](https://quarto.org/docs/websites/website-listings-custom.html)\n\n1. Create a template with an `.ejs` extension \n1. `items` stores your list items. You can loop through them. Every item has parameters corresponding to the [listing fields](https://quarto.org/docs/websites/website-listings.html#listing-fields), e.g. `item.title`, `item.date` etc. You need to wrap them in special brackets, e.g. `<%= item.title %>`\n1. You can define divs, spans and other elements, and add classes to them. Then you can modify the styling using css, e.g. in your main `styles.css` file or another file \n1. To use the template, in the `listing` part of the document, instead of `type: default` declare `template: path\\to\\custom_listing_declaration.ejs` \n\n\n## Merging Python and Observable \n\nHow to merge various engines in one notebook: https://gist.github.com/hrbrmstr/23355194d1964688596553a0e6a0050a \n\nThe secret is to declare the language in code such as: \n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nprint('Hello python')\n# bla = {'x_values': [0,1,2,3,4], 'y_values': [10,11,12,10,9]}\nbla0 = {'x_values': [0,1,2,3,4], 'y_values': [10,11,12,10,9]}\nbla = []\nfor i in range(len(bla0['x_values'])):\n  tmp = {}\n  for k in bla0.keys():\n    tmp[k] = bla0[k][i]\n  bla.append(tmp)\nojs_define(bla=bla)\nprint(bla)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello python\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script type=\"ojs-define\">{\"contents\": [{\"name\": \"bla\", \"value\": [{\"x_values\": 0, \"y_values\": 10}, {\"x_values\": 1, \"y_values\": 11}, {\"x_values\": 2, \"y_values\": 12}, {\"x_values\": 3, \"y_values\": 10}, {\"x_values\": 4, \"y_values\": 9}]}]}</script>\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[{'x_values': 0, 'y_values': 10}, {'x_values': 1, 'y_values': 11}, {'x_values': 2, 'y_values': 12}, {'x_values': 3, 'y_values': 10}, {'x_values': 4, 'y_values': 9}]\n```\n:::\n:::\n\n\n```{ojs}\nbla\n```\n\n```{ojs}\nconsole.log('hello observable js')\nPlot.dot(bla, {x: \"x_values\", y: \"y_values\"}).plot()\n```\n\n",
    "supporting": [
      "quarto_howto_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}