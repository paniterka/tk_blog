{
  "hash": "3566f70f97ac85aadf652678e3d74794",
  "result": {
    "markdown": "---\ntitle: 'Watermarks, footnotes and other annotations'\ndate: '2022-09-27'\nformat: html\ncategories:\n  - matplotlib\n---\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt \n```\n:::\n\n\n## Add a watermark \n\nSometimes you want a big fat text on your chart that says that these are preliminary results. \n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nf, ax = plt.subplots()\n\nimport matplotlib.patheffects as path_effects\n\nwatermark_text = 'draft'\nt = ax.text(0.5, 0.5, watermark_text, transform=ax.transAxes,\n        fontsize=80, color='white', alpha=0.3,  weight=\"bold\", \n        ha='center', va='center', rotation='30')\nt.set_path_effects([path_effects.Stroke(linewidth=3, foreground='lightgray')])\n```\n\n::: {.cell-output .cell-output-display}\n![](watermarks_footnotes_files/figure-html/cell-3-output-1.png){}\n:::\n:::\n\n\nChange `color='white'` to make it colorful. The edge color is encoded in `set_path_effects` as `foreground`. \n\n\n## Add a footnote \n\n### Bottom right \n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nf, ax = plt.subplots()\n\nfootnote = [\n    'Data source: XY',\n    'Author: TK'\n]\n\nax.annotate('\\n'.join(footnote), \n            xy = (1.05,0), xycoords=ax, ha='left', va='bottom',\n            fontsize=8, style='italic', \n            bbox=dict(boxstyle='square,pad=0.0',fc='none', ec='none')\n        )\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nText(1.05, 0, 'Data source: XY\\nAuthor: TK')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](watermarks_footnotes_files/figure-html/cell-4-output-2.png){}\n:::\n:::\n\n\nThe footnote is positioned relative to the axes (`xycoords`+`ha`+`va`). The pad is removed. Aligning to `bottom` makes it robust for multiline entries. \n\n\n### Bottom left under the chart \n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nf, ax = plt.subplots()\n\nfootnote = [\n    'Data source: XY',\n    'Author: TK'\n]\n\nax.annotate('|'.join(footnote), \n            xy = (0,-0.25), xycoords=ax, ha='left', va='top',\n            fontsize=8, style='italic', \n            bbox=dict(boxstyle='square,pad=0.0',fc='none', ec='none')\n        )\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\nText(0, -0.25, 'Data source: XY|Author: TK')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](watermarks_footnotes_files/figure-html/cell-5-output-2.png){}\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nf, ax = plt.subplots()\n\nfootnote = [\n    'Data source: XY',\n    'Author: TK'\n]\n\nax.annotate(footnote[0], \n            xy = (0,-0.25), xycoords=ax, ha='left', va='top',\n            fontsize=8, style='italic', \n            bbox=dict(boxstyle='square,pad=0.0',fc='none', ec='none')\n        )\nax.annotate(footnote[1], \n            xy = (1,-0.25), xycoords=ax, ha='right', va='top',\n            fontsize=8, style='italic', \n            bbox=dict(boxstyle='square,pad=0.0',fc='none', ec='none')\n        )\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\nText(1, -0.25, 'Author: TK')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](watermarks_footnotes_files/figure-html/cell-6-output-2.png){}\n:::\n:::\n\n\n",
    "supporting": [
      "watermarks_footnotes_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}